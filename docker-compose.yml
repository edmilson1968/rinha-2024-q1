version: '3.5'

services:
  postgres:
    image: postgres:16.1-alpine3.19
    environment:
      POSTGRES_DB: "rinha"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "123"
    ports:
      - "5432:5432"
    volumes:
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          # Note que a soma de todos os limites dos serviços
          # aqui declarados é de 1.5 unidades de CPU e 550MB
          # de memória. A distribuição feita aqui é apenas
          # um exemplo – distribua como quiser.
          cpus: "0.35"
          memory: "150MB"

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "50MB"

  api01: &api
    image: rinha-2024-q1:0.0.1-SNAPSHOT
    hostname: api01
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: jdbc:postgresql://postgres:5432/rinha
      DATABASE_USER: postgres
      DATABASE_PASSWORD: 123
    command: --spring.datasource.hikari.maximumPoolSize=15
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "150MB"

#  api01: &api
#    image: bellsoft/liberica-runtime-container:jdk-21-glibc
#    platform: linux/amd64
#    volumes:
#      - $PWD:/tmp
#    working_dir: /tmp
#    hostname: api01
#    depends_on:
#      postgres:
#        condition: service_healthy
#    environment:
#      DATABASE_URL: jdbc:postgresql://postgres:5432/rinha
#      DATABASE_USER: postgres
#      DATABASE_PASSWORD: 123
#    entrypoint: java -jar target/rinha2024Q1-0.0.1-SNAPSHOT.jar

  api02:
    # Essa sintaxe reusa o que foi declarado em 'api01'.
    <<: *api
    hostname: api02




# esta versao é pra rodar com o binario java
#  api03:
#    image: bellsoft/liberica-runtime-container:jdk-21-glibc
#    #    platform: linux/arm64
#    volumes:
#      - $PWD:/tmp
#    working_dir: /tmp
#    hostname: api03
#    #    ports:
#    #      - 8080:8080
#    depends_on:
#      postgres:
#        condition: service_healthy
#    environment:
#      DATABASE_URL: r2dbc:postgresql://postgres@postgres:5432/rinha
#      DATABASE_USER: postgres
#      DATABASE_PASSWORD: 123
#    entrypoint: java -jar target/rinha2024q1-0.0.1-SNAPSHOT.jar

# esta versao é pra rodar com o native-image
#  api01: &api
#    image: api-rinha:teste
#    hostname: api04
#    depends_on:
#      postgres:
#        condition: service_healthy
#    environment:
#      DATABASE_URL: r2dbc:postgresql://postgres@postgres:5432/rinha
#      DATABASE_USER: postgres
#      DATABASE_PASSWORD: 123
#    ulimits:
#      nofile:
#        soft: 1000000
#        hard: 1000000
#    deploy:
#      resources:
#        limits:
#          cpus: "0.45"
#          memory: "140MB"
